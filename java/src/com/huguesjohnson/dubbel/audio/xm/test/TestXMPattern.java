/* https://github.com/huguesjohnson/DubbelLib/blob/main/LICENSE */

package com.huguesjohnson.dubbel.audio.xm.test;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

import com.huguesjohnson.dubbel.audio.xm.PatternData;
import com.huguesjohnson.dubbel.audio.xm.XMPattern;

public class TestXMPattern{

	@Test
	public void test_unpack(){
		try{
			XMPattern pattern=new XMPattern();
			//setup pattern
			byte[] headerSize={9};
			pattern.setHeaderSize(headerSize);
			assertEquals(9,pattern.getHeaderSize());
			byte[] rowCount={64};
			pattern.setNumRows(rowCount);
			int numRows=pattern.getNumRows();
			assertEquals(64,numRows);
			byte packingType=0;
			pattern.setPackingType(packingType);
			assertEquals(0,pattern.getPackingType());
			byte[] packedDataSize={(byte)158,6};
			pattern.setPackedDataSize(packedDataSize);
			assertEquals(1694,pattern.getPackedDataSize());
			byte[] packedData={ -125, 49, 3, -125, 49, 2, -125, 37, 1, -125, 49, 6, -121, 61, 5, 64, -121, 61, 5, 32, -101, 49, 11, 2, 32, 73, 12, 80, 14, -62, -125, 49, 4, -127, 97, -125, 49, 3, -128, -127, 97, -127, 97, -121, 61, 5, 48, -121, 61, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 53, 3, -128, -125, 48, 1, -125, 48, 6, -121, 61, 5, 64, -121, 61, 5, 32, -104, 2, 32, 73, 12, 80, 14, -62, -128, -128, -125, 53, 3, -128, -127, 97, -127, 97, -121, 61, 5, 48, -121, 61, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 56, 3, -125, 49, 2, -125, 37, 1, -125, 53, 6, -121, 65, 5, 64, -121, 61, 5, 32, -125, 61, 9, 73, 12, 80, 14, -62, -128, -128, -125, 56, 3, -128, -127, 97, -127, 97, -121, 65, 5, 48, -121, 61, 5, 48, -128, -124, 16, -128, -128, -125, 60, 3, -125, 49, 2, -125, 48, 1, -125, 48, 6, -121, 65, 5, 64, -121, 65, 5, 32, -128, 73, 12, 80, 14, -62, -128, -128, -125, 60, 3, -128, -127, 97, -127, 97, -121, 65, 5, 48, -121, 65, 5, 48, -128, -124, 16, -128, -128, -125, 61, 3, -125, 49, 2, -125, 44, 1, -125, 53, 6, -121, 68, 5, 64, -121, 65, 5, 32, -101, 49, 11, 2, 32, 73, 12, 80, 14, -62, -127, 97, -125, 53, 4, -125, 61, 3, -128, -127, 97, -127, 97, -121, 68, 5, 48, -121, 65, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 65, 3, -128, -125, 41, 1, -125, 56, 6, -121, 68, 5, 64, -121, 68, 5, 32, -101, 49, 11, 2, 32, 73, 12, 80, 14, -62, -128, -128, -125, 65, 3, -128, -127, 97, -127, 97, -121, 68, 5, 48, -121, 68, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 68, 3, -128, -125, 37, 1, -125, 53, 6, -121, 72, 5, 64, -121, 68, 5, 32, -125, 61, 9, 73, 12, 80, 14, -62, -128, -128, -125, 68, 3, -128, -127, 97, -127, 97, -121, 72, 5, 48, -121, 68, 5, 48, -128, -124, 16, -128, -128, -125, 72, 3, -125, 49, 2, -125, 36, 1, -125, 48, 6, -121, 72, 5, 64, -121, 72, 5, 32, -128, 73, 12, 80, 14, -62, -128, -128, -125, 72, 3, -125, 49, 2, -127, 97, -127, 97, -121, 72, 5, 48, -121, 72, 5, 48, -128, -124, 16, -128, -128, -125, 68, 3, -125, 49, 2, -125, 37, 1, -125, 49, 6, -121, 73, 5, 64, -121, 72, 5, 32, -101, 49, 11, 2, 32, 73, 12, 80, 14, -62, -125, 56, 4, -127, 97, -125, 68, 3, -128, -127, 97, -127, 97, -121, 73, 5, 48, -121, 72, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 65, 3, -128, -125, 41, 1, -125, 56, 6, -121, 73, 5, 64, -121, 73, 5, 32, -104, 2, 32, 73, 12, 80, 14, -62, -128, -128, -125, 65, 3, -128, -127, 97, -127, 97, -121, 73, 5, 48, -121, 73, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 61, 3, -125, 49, 2, -125, 37, 1, -125, 53, 6, -121, 77, 5, 64, -121, 73, 5, 32, -125, 61, 9, 73, 12, 80, 14, -62, -128, -128, -125, 61, 3, -128, -127, 97, -127, 97, -121, 77, 5, 48, -121, 73, 5, 48, -128, -124, 16, -128, -128, -125, 60, 3, -128, -125, 48, 1, -125, 48, 6, -121, 77, 5, 64, -121, 77, 5, 32, -128, 73, 12, 80, 14, -62, -128, -128, -125, 60, 3, -128, -127, 97, -127, 97, -121, 77, 5, 48, -121, 77, 5, 48, -128, -124, 16, -128, -128, -125, 56, 3, -125, 61, 2, -125, 37, 1, -125, 49, 6, -121, 72, 5, 64, -121, 77, 5, 32, -101, 49, 11, 2, 32, 73, 12, 80, 14, -62, -127, 97, -125, 60, 4, -125, 56, 3, -128, -127, 97, -127, 97, -121, 72, 5, 48, -121, 77, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 53, 3, -128, -125, 48, 1, -125, 48, 6, -121, 72, 5, 64, -121, 72, 5, 32, -101, 49, 11, 2, 32, 73, 12, 80, 14, -62, -128, -128, -125, 53, 3, -128, -127, 97, -127, 97, -121, 72, 5, 48, -121, 72, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 49, 3, -125, 49, 2, -125, 44, 1, -125, 53, 6, -121, 68, 5, 64, -121, 72, 5, 32, -125, 61, 9, 73, 12, 80, 14, -62, -128, -128, -125, 49, 3, -128, -127, 97, -127, 97, -121, 68, 5, 48, -121, 72, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 53, 3, -128, -125, 41, 1, -125, 48, 6, -121, 68, 5, 64, -121, 68, 5, 32, -104, 2, 32, 73, 12, 80, 14, -62, -128, -128, -125, 53, 3, -128, -127, 97, -127, 97, -121, 68, 5, 48, -121, 68, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 56, 3, -125, 49, 2, -125, 37, 1, -125, 53, 6, -121, 65, 5, 64, -121, 68, 5, 32, -101, 49, 11, 2, 32, 73, 12, 80, 14, -62, -125, 61, 4, -127, 97, -125, 56, 3, -128, -127, 97, -127, 97, -121, 65, 5, 48, -121, 68, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 60, 3, -125, 49, 2, -125, 36, 1, -125, 56, 6, -121, 65, 5, 64, -121, 65, 5, 32, -104, 2, 32, 73, 12, 80, 14, -62, -128, -128, -125, 60, 3, -128, -127, 97, -127, 97, -121, 65, 5, 48, -121, 65, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 61, 3, -125, 49, 2, -125, 37, 1, -125, 53, 6, -121, 61, 5, 64, -121, 65, 5, 32, -125, 61, 9, 73, 12, 80, 14, -62, -128, -128, -125, 61, 3, -128, -127, 97, -127, 97, -121, 61, 5, 48, -121, 65, 5, 48, -128, -124, 16, -128, -128, -125, 65, 3, -128, -125, 41, 1, -125, 48, 6, -121, 61, 5, 64, -121, 61, 5, 32, -128, 73, 12, 80, 14, -62, -128, -128, -125, 65, 3, -128, -127, 97, -127, 97, -121, 61, 5, 48, -121, 61, 5, 48, -128, -124, 16, -128, -128, -125, 68, 3, -125, 49, 2, -125, 37, 1, -125, 49, 6, -121, 60, 5, 64, -121, 61, 5, 32, -101, 49, 11, 2, 32, 73, 12, 80, 14, -62, -127, 97, -125, 60, 4, -125, 68, 3, -125, 49, 2, -127, 97, -127, 97, -121, 60, 5, 48, -121, 61, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 72, 3, -125, 49, 2, -125, 48, 1, -125, 56, 6, -121, 60, 5, 64, -121, 60, 5, 32, -101, 49, 11, 2, 32, 73, 12, 80, 14, -62, -128, -128, -125, 72, 3, -125, 49, 2, -127, 97, -127, 97, -121, 60, 5, 48, -121, 60, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 68, 3, -125, 49, 2, -125, 37, 1, -125, 53, 6, -121, 56, 5, 64, -121, 60, 5, 32, -125, 61, 9, 73, 12, 80, 14, -62, -128, -128, -125, 68, 3, -128, -127, 97, -127, 97, -121, 56, 5, 48, -121, 60, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 65, 3, -128, -125, 48, 1, -125, 48, 6, -121, 56, 5, 64, -121, 56, 5, 32, -104, 2, 32, 73, 12, 80, 14, -62, -128, -128, -125, 65, 3, -128, -127, 97, -127, 97, -121, 56, 5, 48, -121, 56, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 61, 3, -128, -125, 44, 1, -125, 49, 6, -121, 53, 5, 64, -121, 56, 5, 32, -101, 49, 11, 2, 32, 73, 12, 80, 14, -62, -125, 56, 4, -127, 97, -125, 61, 3, -128, -127, 97, -127, 97, -121, 53, 5, 48, -121, 56, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 60, 3, -125, 61, 2, -125, 41, 1, -125, 48, 6, -121, 53, 5, 64, -121, 53, 5, 32, -104, 2, 32, 73, 12, 80, 14, -62, -128, -128, -125, 60, 3, -128, -127, 97, -127, 97, -121, 53, 5, 48, -121, 53, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 56, 3, -128, -125, 37, 1, -125, 53, 6, -121, 60, 5, 64, -121, 53, 5, 32, -125, 61, 9, 73, 12, 80, 14, -62, -128, -128, -125, 56, 3, -128, -127, 97, -127, 97, -121, 60, 5, 48, -121, 53, 5, 48, -128, -124, 16, -128, -128, -125, 53, 3, -128, -125, 36, 1, -125, 48, 6, -121, 60, 5, 64, -121, 60, 5, 32, -128, 73, 12, 80, 14, -62, -128, -128, -125, 53, 3, -128, -127, 97, -127, 97, -121, 60, 5, 48, -121, 60, 5, 48, -128, -124, 16, -128, -128, -125, 49, 3, -125, 49, 2, -125, 37, 1, -125, 53, 6, -121, 65, 5, 64, -121, 60, 5, 32, -101, 49, 11, 2, 32, 73, 12, 80, 14, -62, -127, 97, -125, 53, 4, -125, 49, 3, -128, -127, 97, -127, 97, -121, 65, 5, 48, -121, 60, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 48, 3, -125, 61, 2, -125, 41, 1, -125, 56, 6, -121, 65, 5, 64, -121, 65, 5, 32, -101, 49, 11, 2, 32, 73, 12, 80, 14, -62, -128, -128, -125, 48, 3, -128, -127, 97, -127, 97, -121, 65, 5, 48, -121, 65, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 44, 3, -125, 61, 2, -125, 37, 1, -125, 53, 6, -121, 61, 5, 64, -121, 65, 5, 32, -125, 61, 9, 73, 12, 80, 14, -62, -128, -128, -125, 44, 3, -128, -127, 97, -127, 97, -121, 61, 5, 48, -121, 65, 5, 48, -104, 2, 32, -124, 16, -128, -128, -125, 48, 3, -128, -125, 37, 1, -125, 48, 6, -121, 61, 5, 64, -121, 61, 5, 32, -104, 2, 32, 73, 12, 80, 14, -62, -128, -128, -125, 48, 3, -128, -127, 97, -127, 97, -121, 61, 5, 48, -121, 61, 5, 48, -104, 2, 32, -124, 16, -128, -128};
			pattern.setPackedData(packedData);
			//try unpacking
			int numChannels=10;
			PatternData[][] pd=pattern.unpack(numChannels);
			assertEquals(numChannels,pd.length);
			for(int i=0;i<numChannels;i++){
				assertEquals(numRows,pd[i].length);
				for(int j=0;j<numRows;j++){
					if(pd[i][j]==null){
						fail("pd["+i+"]["+j+"]==null");
					}
				}
			}
		}catch(Exception x){
			fail(x.getMessage());
		}		
	}
}