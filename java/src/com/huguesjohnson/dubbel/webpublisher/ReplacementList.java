/* https://github.com/huguesjohnson/DubbelLib/blob/main/LICENSE */

package com.huguesjohnson.dubbel.webpublisher;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;

public class ReplacementList extends ArrayList<Replacement>{
	//just here to deal with compiler warnings
	private static final long serialVersionUID=666L;

	public Replacement findByStartTag(String startTag){
		String search=startTag.trim();
		Iterator<Replacement> i=this.iterator();
		while(i.hasNext()){
			Replacement r=i.next();
			if(r.getStartTag().equalsIgnoreCase(search)){
				return(r);
			}
		}
		return(null);//yeah, that's right
	}
	
	/* autogenerated code */	
	
	public ReplacementList() {
		super();
	}

	public ReplacementList(Collection<? extends Replacement> c) {
		super(c);
	}

	public ReplacementList(int initialCapacity) {
		super(initialCapacity);
	}
}