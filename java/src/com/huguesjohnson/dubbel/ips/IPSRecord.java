/* https://github.com/huguesjohnson/DubbelLib/blob/main/LICENSE */

package com.huguesjohnson.dubbel.ips;

import com.huguesjohnson.dubbel.util.NumberFormatters;

public class IPSRecord{
	private int offset;
	private byte[] data;
	
	public IPSRecord(int offset){
		this.offset=offset;
	}

	public IPSRecord(int offset,byte[] data){
		this.offset=offset;
		this.data=data;
	}
	
	public int length(){
		if(this.data==null){return(0);}
		return(this.data.length);
	}
	
	@Override
	public String toString(){
		String newLine=System.lineSeparator();
		StringBuilder sb=new StringBuilder();
		sb.append("offset=");
		sb.append(NumberFormatters.intToHex(this.offset));
		sb.append(newLine);
		sb.append("length()=");
		sb.append(NumberFormatters.intToHex(this.length()));
		sb.append(newLine);
		sb.append(NumberFormatters.byteArrayToString(this.data));
		return(sb.toString());
	}

	/* autogenerated code below */
	
	public int getOffset() {
		return offset;
	}

	public void setOffset(int offset) {
		this.offset = offset;
	}

	public byte[] getData() {
		return data;
	}

	public void setData(byte[] data) {
		this.data = data;
	}
}